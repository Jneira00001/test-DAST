name: OWASP ZAP Full Scan

on:
  workflow_dispatch:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  zap_scan:
    runs-on: ubuntu-latest
    name: Full Scan Website with OWASP ZAP

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract URL from url.txt
        id: extract_url
        run: |
          URL_VALUE=$(cat url.txt)
          if [ -z "$URL_VALUE" ]; then
            echo "Error: No se pudo extraer la URL del archivo."
            exit 1
          fi
          echo "URL extraída: $URL_VALUE"
          echo "URL_TO_SCAN=$URL_VALUE" >> $GITHUB_ENV

      - name: Get Timestamp
        id: timestamp
        run: echo "TIMESTAMP=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      - name: Create ZAP directory and Set Permissions
        run: |
          mkdir -p ./zap/wrk
          sudo chmod -R 777 ./zap/wrk

      - name: Run ZAP Full Scan (simula GUI)
        run: |
          REPORT_NAME="report-${{ env.TIMESTAMP }}.html"
          echo "Iniciando escaneo ZAP en: ${{ env.URL_TO_SCAN }}"
          echo "El informe se guardará como: $REPORT_NAME"

          # Escaneo con timeout de 10 minutos y configuración similar a GUI
          timeout 10m docker run --rm \
            -v $(pwd)/zap/wrk:/zap/wrk:rw \
            zaproxy/zap-stable zap-full-scan.py \
            -t ${{ env.URL_TO_SCAN }} \
            -r $REPORT_NAME \
            -z "-config spider.maxDepth=2 -config ajaxSpider.browserId=htmlunit -config view.mode=attack"

      - name: Upload ZAP Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ZAP-Report-${{ env.TIMESTAMP }}
          path: ./zap/wrk/report-${{ env.TIMESTAMP }}.html
          retention-days: 7
